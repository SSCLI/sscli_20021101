<?xml version="1.0" encoding="UTF-8"?>
<!--
    
     Copyright (c) 2002 Microsoft Corporation.  All rights reserved.
    
     The use and distribution terms for this software are contained in the file
     named license.txt, which can be found in the root of this distribution.
     By using this software in any fashion, you are agreeing to be bound by the
     terms of this license.
    
     You must not remove this notice, or any other, from this software.
    
-->
<configuration>

    <configSections>
        <!-- tell .NET Framework to ignore CLR sections -->
        <section name="runtime" type="System.Configuration.IgnoreSectionHandler, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowLocation="false"/> 
        <section name="mscorlib" type="System.Configuration.IgnoreSectionHandler, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowLocation="false"/> 
        <section name="startup" type="System.Configuration.IgnoreSectionHandler, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowLocation="false"/> 
        <section name="system.runtime.remoting" type="System.Configuration.IgnoreSectionHandler, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowLocation="false"/> 

        <section name="system.diagnostics" type="System.Diagnostics.DiagnosticsConfigurationHandler, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
        <section name="appSettings" type="System.Configuration.NameValueFileSectionHandler, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>

        <sectionGroup name="system.net">
            <section name="authenticationModules" type="System.Net.Configuration.NetAuthenticationModuleHandler, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
            <section name="defaultProxy" type="System.Net.Configuration.DefaultProxyHandler, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
            <section name="connectionManagement" type="System.Net.Configuration.ConnectionManagementHandler, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
            <section name="webRequestModules" type="System.Net.Configuration.WebRequestModuleHandler, System, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
        </sectionGroup>
    </configSections>

    <!-- use this section to add application specific configuration 
        example: 
    <appSettings>
            <add key="XML File Name" value="myXmlFileName.xml" /> 
    </appSettings>
    -->

    <system.diagnostics>
         <switches>
                <!-- <add name="SwitchName" value="4"/>  -->
         </switches>
         <trace autoflush="false" indentsize="4"/>
         <!-- <assert   assertuienabled="true" logfilename=".\TraceLog.txt"/> -->
    </system.diagnostics>

    <system.net>
        <defaultProxy>

            <!-- 
                The following entry enables reading of the per user (LAN) Internet settings.
                Adding additional proxy settings, without first setting to "false",
                will individually override. Note that "Automatic configuration" and 
                "automatic configuration scripts" cannot be read.
                
                <proxy> settings:
                    usesystemdefault="[true|false]" - Read settings from Internet Options (see above)
                    proxyaddress="[string]" - A Uri string of the proxy server to use.
                    bypassonlocal="[true|false]" - Enables bypassing of the proxy for local resources.
             -->

            <proxy usesystemdefault="true"/>

            <!-- use this section to disable proxy use for matching servers
                example:
            <bypasslist>
                <add address="bypassRegexString" />
            </bypasslist> 
            -->                   

            <!-- use this section to override proxy settings with your own IWebProxy implementation
                example:
            <module
                type="System.Net.WebProxy, System.Net, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" 
            /> 
            -->                   

        </defaultProxy>
        <webRequestModules>
            <add prefix="http" type="System.Net.HttpRequestCreator"/>
            <add prefix="https" type="System.Net.HttpRequestCreator"/>
            <add prefix="file" type="System.Net.FileWebRequestCreator"/>
        </webRequestModules>
        <authenticationModules> 
            <add type="System.Net.DigestClient"/>
            <add type="System.Net.NegotiateClient"/>
            <add type="System.Net.KerberosClient"/>
            <add type="System.Net.NtlmClient"/>
            <add type="System.Net.BasicClient"/>
        </authenticationModules> 
        <connectionManagement>
            <add address="*" maxconnection="2"/>
        </connectionManagement>
    </system.net>

    <system.runtime.remoting>
        <application>
            <channels>
                <channel ref="http client" displayName="http client (delay loaded)" delayLoadAsClientChannel="true"/>
                <channel ref="tcp client" displayName="tcp client (delay loaded)" delayLoadAsClientChannel="true"/>                         
            </channels>
        </application>
        <channels>
            <channel id="http" type="System.Runtime.Remoting.Channels.Http.HttpChannel, System.Runtime.Remoting, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
            <channel id="http client" type="System.Runtime.Remoting.Channels.Http.HttpClientChannel, System.Runtime.Remoting, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
            <channel id="http server" type="System.Runtime.Remoting.Channels.Http.HttpServerChannel, System.Runtime.Remoting, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
            <channel id="tcp" type="System.Runtime.Remoting.Channels.Tcp.TcpChannel, System.Runtime.Remoting, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
            <channel id="tcp client" type="System.Runtime.Remoting.Channels.Tcp.TcpClientChannel, System.Runtime.Remoting, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
            <channel id="tcp server" type="System.Runtime.Remoting.Channels.Tcp.TcpServerChannel, System.Runtime.Remoting, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
        </channels>
        <channelSinkProviders>
            <clientProviders>
                <formatter id="soap" type="System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider, System.Runtime.Remoting, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
                <formatter id="binary" type="System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider, System.Runtime.Remoting, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
            </clientProviders>
            <serverProviders>
                <formatter id="soap" type="System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider, System.Runtime.Remoting, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
                <formatter id="binary" type="System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider, System.Runtime.Remoting, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
                <provider id="wsdl" type="System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider, System.Runtime.Remoting, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
            </serverProviders>
        </channelSinkProviders>
    </system.runtime.remoting>
</configuration>
