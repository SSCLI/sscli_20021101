;==++==
;
;   
;    Copyright (c) 2002 Microsoft Corporation.  All rights reserved.
;   
;    The use and distribution terms for this software are contained in the file
;    named license.txt, which can be found in the root of this distribution.
;    By using this software in any fashion, you are agreeing to be bound by the
;    terms of this license.
;   
;    You must not remove this notice, or any other, from this software.
;   
; 
;==--==

#=------------------------------------------------------------------=
# Help screen messages
#
Logo=Microsoft (R) Xml Schemas/DataTypes support utility\n[{0}, Version {1}]\n{2}\n
HelpDescription=\n{0} -\n    Utility to generate schema or class files from given source.
HelpUsage=\n{0} <schema>.xsd /classes [/e:] [/l:] [/n:] [/o:] [/uri:]\n{0} <assembly>.dll|.exe [/outputdir:] [/type: [...]]\n{0} <schema>.xdr [/outputdir:]
HelpOptions=\n     - OPTIONS -
HelpClasses=\n{0}\n    Generate classes for this schema. Short form is '{1}'.
HelpDataset=\n{0}\n    Generate sub-classed DataSet for this schema. Short form is '{1}'.
HelpElement=\n{0}<element>\n    Element from schema to process. Short form is '{1}'.
HelpLanguage=\n{0}<language>\n    The language to use for the generated code.  Choose from 'CS',\n  or 'JS' or provide a fully-qualified name for a class implementing\n    System.CodeDom.Compiler.CodeDomProvider.  The default is 'CS' (CSharp).\n    Short form is '{1}'.
HelpNamespace=\n{0}<namespace>\n    The namespace for generated class files. The default namespace\n    is the global namespace. Short form is '{1}'.
HelpNoLogo=\n{0}\n    Suppresses the banner.
HelpOut=\n{0}<directoryName>\n    The output directory to create files in. The default\n    is the current directory. Short form is '{1}'.
HelpType=\n{0}<type>\n    Type from assembly to generate schema for.  Multiple types may be provided.\n    If no types are provided, then schemas for all types in an assembly\n    are generated. Short form is '{1}'.
HelpUri=\n{0}<uri>\n    Uri of elements from schema to process. Short form is '{1}'.
HelpArguments=\n     - ARGUMENTS -
HelpArgumentsDescription=<schema>.xsd       Name of a schema containing elements to import\n<assembly>.dll|exe Name of an assembly containing types to generate schema for.\n<schema>.xdr       Name of an xdr schema to convert to xsd.\nMultiple file arguments of the same type may be provided.
MoreHelp=\nIf you would like more help, please type "xsd {0}".

#=------------------------------------------------------------------=
# Errors and Warnings
#
Error=Error: 
ErrInvalidArgument=invalid command line argument: '{0}'.
ErrLanguage=Value '{0}' for switch /language is not a known ICodeGenerator or CodeDomProvider.
ErrLoadAssembly=Unable to load assembly: '{0}'.
ErrUnknownNodeType=Unknown node type.
ErrInputFileTypes=Cannot have more than one type of file as input.
ErrClassOrDataset=Can only generate one of classes or datasets.
ErrGeneral=There was an error processing '{0}'.
ErrGenerateDataSetClass=Error generating code for DataSet '{0}'.
ErrGenerateClassesForSchema=Error generating classes for schema '{0}'.
Warning=Warning: {0}
UnhandledNode=in XML document ({0},{1}): element '{2}' was not recognized and will be ignored.
FileNotFound=Could not find file "{0}".
SchemaValidationWarning=Warning: Schema could not be validated. Class generation may fail or may produce incorrect results.
SchemaValidationWarningDetails=Schema validation warning: {0}
NoClassesGenerated=Warning: cannot generate classes because no top-level elements with complex type were found.

#=------------------------------------------------------------------=
# Information Messages, misc const strings
#
InfoWrittingFile=Writing file '{0}'.
InfoVersionComment=This source code was auto-generated by {0}, Version={1}.


